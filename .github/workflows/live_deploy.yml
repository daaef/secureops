# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Live CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm install -g yarn
    - run: CI= yarn run build --if-present
    - name: ssh-scp-ssh-pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
      with:
        host: 162.240.160.55
        port: 22
        user: root
        pass: ${{ secrets.SERVER_ROOT_KEY }}
#        key: ${{ secrets.SERVER_ROOT_SSH_KEY }}
        connect_timeout: 24000
        # rsync -r ./build .
        first_ssh: |-
          rm -rf secureops_website
          mkdir -p secureops_website
        scp: |-
          "./Dockerfile" => "secureops_website"
          "./build" => "secureops_website"
          "./default.conf" => "secureops_website"
        last_ssh: |-
          cp /etc/letsencrypt/live/secureops-solutions.tech/fullchain.pem secureops_website
          cp /etc/letsencrypt/live/secureops-solutions.tech/privkey.pem secureops_website
          cd secureops_website
          sudo docker stop secureops_website || true
          sudo docker rm secureops_website || true
          sudo docker rmi secureops_website || true
          sudo docker build -t secureops_website ./
          sudo docker run -dp 80:80 443:443 --restart always --name secureops_website secureops_website